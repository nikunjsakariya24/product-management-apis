name: product
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/product
    metadata:
      groupName: product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'get all product list with pagination.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/product
    metadata:
      groupName: product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'add new product.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: error
        type: string
        enumValues: []
        custom: []
      original_amount:
        name: original_amount
        description: ''
        required: true
        example: id
        type: string
        enumValues: []
        custom: []
      discounted_amount:
        name: discounted_amount
        description: ''
        required: true
        example: maxime
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: error
      original_amount: id
      discounted_amount: maxime
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/product/{id}'
    metadata:
      groupName: product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'get product by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: ipsam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/product/{id}'
    metadata:
      groupName: product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update product by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: nihil
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: nihil
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: aut
        type: string
        enumValues: []
        custom: []
      original_amount:
        name: original_amount
        description: ''
        required: true
        example: fugiat
        type: string
        enumValues: []
        custom: []
      discounted_amount:
        name: discounted_amount
        description: ''
        required: true
        example: nisi
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: aut
      original_amount: fugiat
      discounted_amount: nisi
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/product/{id}'
    metadata:
      groupName: product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'delete product by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: ut
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: ut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/product/search
    metadata:
      groupName: product
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'get product by search.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      search:
        name: search
        description: ''
        required: true
        example: accusantium
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      search: accusantium
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
