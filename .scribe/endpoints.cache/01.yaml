## Autogenerated by Scribe. DO NOT MODIFY.

name: user
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'get all user list with pagination.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{id}'
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'get user profile by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: quia
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/user/{id}'
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update user profile by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: fugit
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: fugit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: earum
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      name: earum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/{id}'
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'delete user profile by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: doloribus
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: doloribus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/search
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'get user profile by search.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      search:
        name: search
        description: ''
        required: true
        example: possimus
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      search: possimus
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/user/password/{user}'
    metadata:
      groupName: user
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'update user password by id.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters:
      user:
        name: user
        description: ''
        required: true
        example: ab
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      user: ab
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: sunt
        type: string
        enumValues: []
        custom: []
    cleanBodyParameters:
      password: sunt
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
